{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReverse","setIsReverse","NoSort","sortType","setSortType","sortedGoods","listOfGoods","copyOfGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getSortedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAqBKA,E,0EAhBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAMGD,K,oBAAAA,E,gBAAAA,E,kBAAAA,M,KAmCE,IAAME,EAAM,WACjB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAASH,EAASM,QAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA3BR,SACEC,EADF,GAGG,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,UAENO,EAAW,YAAOD,GAiBxB,OAfAC,EAAYC,MAAK,SAACC,EAAOC,GACvB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,OAIK,IAAdd,GACFO,EAAYQ,UAGPR,EAOLS,CAAenB,EAAiB,CAAEM,WAAUH,cAM9C,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYhB,IAAaP,EAASe,WAEtCS,QAAS,WACPhB,EAAYR,EAASe,WARzB,iCAcA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYhB,IAAaP,EAASiB,SAEtCO,QAAS,WACPhB,EAAYR,EAASiB,SARzB,4BAcA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA0B,IAAdnB,IAEhBoB,QAAS,kBAAMnB,GAAcD,IAP/B,sBAYe,YAAbG,IAAwC,IAAdH,IAC1B,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,YACA,YAEFC,QAxDI,WACZhB,EAAYR,EAASM,QACrBD,GAAa,IA+CP,sBAcJ,6BACGI,EAAYgB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cfd855ff.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\n// const SORT_FIELD_ALPHABET = 'alphabet';\n// const SORT_FIELD_LENGTH = 'length';\n\nenum SortType {\n  Alphabet = 'alphabet',\n  Length = 'length',\n  NoSort = 'no sort',\n}\n\ninterface ObjectOfChanges {\n  sortType: SortType;\n  isReverse: boolean;\n}\n\nfunction getSortedGoods(\n  listOfGoods: string[],\n  { sortType, isReverse }: ObjectOfChanges,\n) {\n  const copyOfGoods = [...listOfGoods];\n\n  copyOfGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.Alphabet:\n        return good1.localeCompare(good2);\n      case SortType.Length:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse === true) {\n    copyOfGoods.reverse();\n  }\n\n  return copyOfGoods;\n}\n\nexport const App = () => {\n  const [isReverse, setIsReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NoSort);\n  const sortedGoods\n  = getSortedGoods(goodsFromServer, { sortType, isReverse });\n  const reset = () => {\n    setSortType(SortType.NoSort);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.Alphabet },\n          )}\n          onClick={() => {\n            setSortType(SortType.Alphabet);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.Length },\n          )}\n          onClick={() => {\n            setSortType(SortType.Length);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': isReverse === false },\n          )}\n          onClick={() => setIsReverse(!isReverse)} // altered into a simpler expression\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'no sort' || isReverse === true) && (\n          <button\n            type=\"button\"\n            className={cn(\n              'button',\n              'is-danger',\n              'is-light',\n            )}\n            onClick={reset} // made into separate function\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}